export type HSLColor = { hue: number; sat: number; lum: number };

/*
This function takes a string and returns a color based on the string.
The color is generated by hashing the string (SHA-256) and calculating the HSL hue value out of the hash value.
 */
export async function generateColor(text: string): Promise<HSLColor> {
  const hashBuffer = await window.crypto.subtle.digest("SHA-256", new TextEncoder().encode(text));
  const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array
  const hashHex = hashArray
    .map((b) => b.toString(16).padStart(2, "0"))
    .join(""); // convert bytes to hex string

  const hue: number = parseInt(hashHex, 16) % 360;
  const lum: number = parseInt(hashHex, 16) % 50;
  return {hue: hue, sat: 70, lum: 30 + lum};
}
